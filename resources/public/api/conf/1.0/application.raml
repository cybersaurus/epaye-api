#%RAML 1.0
title: ePAYE Public API
version: 1.0
protocols: [ HTTPS ]
baseUri: http://api.service.hmrc.gov.uk

documentation:
  - title: Overview
    content: !include documentation/overview.md
  - title: Versioning
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md
  - title: Testing the API
    content: !include documentation/testing-approach.md

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml

mediaType: [ application/json, application/hal+json ]

types:
  ChargeType:
    pattern: "[a-zA-Z0-9]+"
  ExportId:
    pattern: "[a-zA-Z0-9]+"

/epaye:
  /charges:
    /totals:
      get:
        is: [ headers.acceptHeader ]
        displayName: Retrieve totals for charges
        description: This allows you to retrieve the totals for all outstanding charges
        (annotations.scope): "read:epaye"
        securedBy: [ sec.oauth_2_0: { scopes: [ "read:epaye" ] } ]
        responses:
          200:
            body:
              application/json:
                type: !include schemas/Totals.get.schema.array.json
                example: !include examples/Totals.get.array.json
    /byType/{chargeType}:
      uriParameters:
        chargeType:
          type: ChargeType
          description: The charge identifier
          example: "apprenticeshipLevy"
      get:
        is: [ headers.acceptHeader ]
        displayName: Retrieve charges of specific type
        description: This allows you to retrieve all charges of a specific charge type that make up the total for that type, e.g. Apprenticeship Levy
        (annotations.scope): "read:epaye"
        securedBy: [ sec.oauth_2_0: { scopes: [ "read:epaye" ] } ]
        responses:
          200:
            body:
              application/json:
                type: !include schemas/ByType.get.schema.array.json
                example: !include examples/ByType.get.array.json
  /statements:
    get:
      is: [ headers.acceptHeader ]
      displayName: Retrieve statements
      description: This allows you to retrieve your current account statement which includes charges, payments and balance for each tax month.
      (annotations.scope): "read:epaye"
      securedBy: [ sec.oauth_2_0: { scopes: [ "read:epaye" ] } ]
      responses:
        200:
          body:
            application/json:
              type: !include schemas/Statements.get.schema.array.json
              example: !include examples/Statements.get.array.json

  /employees:
    /{exportId}:
      uriParameters:
        exportId:
          type: ExportId
          description: The ID for the data export
          example: "79f22d835c1a4dcc86d8a34b5a7891c0"
      get:
        is: [ headers.acceptHeader ]
        displayName: Retrieve employee data
        description: This allows you to download employee level data once the data export has finished
        (annotations.scope): "read:epaye"
        securedBy: [ sec.oauth_2_0: { scopes: [ "read:epaye" ] } ]
        responses:
          200:
            body:
              application/json:
                type: !include schemas/EmployeeData.get.schema.json
                example: !include examples/EmployeeData.get.json
    post:
      is: [ headers.acceptHeader ]
      displayName: Generate employee data
      description: This allows you to start a data export of employee level data
      (annotations.scope): "read:epaye"
      securedBy: [ sec.oauth_2_0: { scopes: [ "read:epaye" ] } ]
      responses:
        200:
          body:
            application/json:
              type: !include schemas/EmployeeData.post.schema.json
              example: !include examples/EmployeeData.post.json
